<!-- This file is generated by system. Do not edit this file. -->
<script name="Delete_EAPSProtected_BVLAN">
<comments>This scripts deletes a list of B-VLANs after removing them from EAPS domain protection</comments>
<content># @METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# scripting.Script        : B-VLAN deletion after removing from EAPS domain's protection
#############################################################################
# Revision      : 1.0
# Last Updated  : 26-DEC-2009
#############################################################################
# Author Name   : NMS Team
#############################################################################
# Purpose:
#############################################################################
# 1. Delete the list of B-VLAN from protection of a list of EAPS domains.
# 1. Delete the list of Ring Ports from each B-VLAN in the List.
# 2. Delete the list of B-VLAN(s).
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;This script deletes B-VLANs after removing from EAPS domain's protection&quot;
# @SectionStart (description = &quot;B-VLAN Protection Parameters&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

################################################################################
# B-VLAN Definition
################################################################################

# @VariableFieldLabel (description = &quot;List of comma separated B-VLAN Names&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes)
set var eapsProtBVLanNameSeq &quot;&quot;

# @VariableFieldLabel (description = &quot;List of comma separated EAPS Domain Names&quot;
#   type        = String,
#   scope       = global,
#   required    = yes)
set var eapsProtDomainNameSeq &quot;&quot;

# @VariableFieldLabel (description = &quot;List of comma separated protecting Ring Ports&quot;
#   type        = String,
#   scope       = device,
#   required    = yes)
set var eapsProtRingPortSeq &quot;&quot;

# @SectionEnd
# @MetaDataEnd

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

     global abort_on_error

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

############################################################################
# TCL Procedure for B-VLAN Protection Parameter Validation
############################################################################
proc validateBVLanProtectParams {inBVLanNameSeq inDomainNameSeq inRingPortSeq} {

    global abort_on_error
    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF

    IF (![expr [string length $inBVLanNameSeq] &gt; 0]) THEN
       error &quot;FAILED: B-VLAN Name List is empty.&quot;
    ENDIF

    IF (![expr [string length $inDomainNameSeq] &gt; 0]) THEN
       error &quot;FAILED: EAPS Domain Name List is empty.&quot;
    ENDIF

    IF (![expr [string length $inRingPortSeq] &gt; 0]) THEN
       error &quot;FAILED: B-VLAN Protect Port List is empty.&quot;
    ENDIF
}

#################################################################################
# Define TCL procedures for B-VLAN removal from EAPS Domain Ring Ports
# and subsequent deletion of the B-VLAN
################################################################################
proc remProtectOneBVLanFromOneDomain {inBVLanName inDomainName} {

    global abort_on_error

    if {[catch {
        config eaps $inDomainName delete protected $inBVLanName
    } errMsgText]} {
        puts &quot;FAILED: Cannot delete protection of B-VLAN $inBVLanName from EAPS-Domain $inDomainName, $errMsgText&quot;
    }
}

proc remProtectOneBVLanFromAllDomain {inBVLanName inDomainNameList} {

    global abort_on_error

    foreach currDomainName $inDomainNameList {
       remProtectOneBVLanFromOneDomain $inBVLanName $currDomainName
    }
}

proc delPortsFromOneBVLan {inBVLanName inRingPortSeq} {

    global abort_on_error

    if {[catch {
       config bvlan $inBVLanName delete ports $inRingPortSeq
    } errMsgText]} {
       puts &quot;FAILED: Could not delete Ports $inRingPortSeq from B-VLAN $inBVLanName, $errMsgText&quot;
    }
}

proc delOneBVLan {inBVLanName} {

    global abort_on_error

    if {[catch {
       delete bvlan $inBVLanName
    } errMsgText]} {
       puts &quot;FAILED: Could not delete B-VLAN $inBVLanName, $errMsgText&quot;
    }
}

proc remProtectAllBVLansFromAllDomain {inBVLanNameList inDomainNameList} {

    global abort_on_error

    foreach currBVLanName $inBVLanNameList {
       remProtectOneBVLanFromAllDomain $currBVLanName $inDomainNameList
    }
}

proc delPortsFromAllBVLans {inBVLanNameList inRingPortSeq} {

    global abort_on_error

    foreach currBVLanName $inBVLanNameList {
       delPortsFromOneBVLan $currBVLanName $inRingPortSeq
    }
}

proc delAllBVLans {inBVLanNameList} {

    global abort_on_error

    foreach currBVLanName $inBVLanNameList {
       delOneBVLan $currBVLanName
    }
}

#############################################################################
# TCL Procedure for B-VLAN deletion after protection removal from EAPS Domain
# after validating all parameters
#############################################################################
proc handleProtectedBVLanDelete {inBVLanNameSeq inDomainNameSeq inRingPortSeq} {

    global abort_on_error
	global isExos

	if {[string match $isExos true]} {
    	create log entry &quot;Starting EAPS Protected B-VLAN deletion on Switch&quot;
   	}

    validateBVLanProtectParams $inBVLanNameSeq \
                               $inDomainNameSeq \
                               $inRingPortSeq

    set tmpBVLanNameList  [split $inBVLanNameSeq ,]
    set tmpDomainNameList [split $inDomainNameSeq ,]

    remProtectAllBVLansFromAllDomain $tmpBVLanNameList \
                                     $tmpDomainNameList

    delPortsFromAllBVLans $tmpBVLanNameList \
                          $inRingPortSeq

    delAllBVLans $tmpBVLanNameList

	if {[string match $isExos true]} {
    	create log entry &quot;Finished EAPS Protected B-VLAN deletion on Switch&quot;
   	}
}

############################################################################
# CLI Configuration Starting
############################################################################
setCliErrorHandling $abortOnCliError

handleProtectedBVLanDelete $eapsProtBVLanNameSeq \
                           $eapsProtDomainNameSeq \
                           $eapsProtRingPortSeq

############################################################################
## Now Sync B-VLAN and Topology on this device
############################################################################
PerformSync -device $deviceIP -scope PBB
PerformSync -device $deviceIP -scope EapsDomain -type protected -name $eapsProtDomainNameSeq
</content>
<contexts></contexts>
<supprotedGroups></supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<saveConfigOnExit>true</saveConfigOnExit>
<menuScope>TOOLS</menuScope>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
