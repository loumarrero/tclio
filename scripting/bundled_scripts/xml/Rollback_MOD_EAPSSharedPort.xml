<!-- This file is generated by system. Do not edit this file. -->
<script name="Rollback_MOD_EAPSSharedPort">
<comments>This script rollsback modifications of a EAPS Shared-Port</comments>
<content>#@METADATASTART
#@DetailDescriptionStart
########################################################################
# Extreme Networks(R) CLI Scripting Library
# Note          : EAPS Shared-Port Configuration Management
# scripting.Script        : Rollback of EAPS Shared Port modification
########################################################################
# Revision      : 1.0
# Last Updated  : 12-JAN-2010
########################################################################
# Author Name   : NMS Team
########################################################################
# Purpose:
########################################################################
# 1. Modify EAPS Shared Port
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;scripting.Script to rollback EAPS Shared-Port modification&quot;
# @SectionStart (description = &quot;EAPS Shared-Port Modify-Rollback Params&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

######################################################################
# EAPS Shared-Port Parameters Definition
######################################################################

# @VariableFieldLabel (description = &quot;Choose Modify-Rollback Action&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [Modify_Role,Modify_Timers])
set var eapsSPModifyAction Modify_Timers

# @VariableFieldLabel (description = &quot;EAPS Shared Port Number&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes)
set var eapsSPPortNum &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Shared Port Mode&quot;,
#     type        = String,
#     scope       = device,
#     required    = no,
#     validValues = [controller,partner])
set var eapsSPMode controller

# @VariableFieldLabel (description = &quot;Old EAPS Shared Port Mode&quot;,
#     type        = String,
#     scope       = device,
#     required    = no,
#     validValues = [controller,partner])
set var eapsSPOldMode &quot;&quot;

# @VariableFieldLabel (description = &quot;Common Path Health Interval 1-10 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = no)
set var eapsSPCommonPathInterval 1

# @VariableFieldLabel (description = &quot;Common Path Timeout 3-30 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = no)
set var eapsSPCommonPathTimeout 3

# @VariableFieldLabel (description = &quot;Segment Port Health Interval 1-10 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = no)
set var eapsSPSegmentInterval 1

# @VariableFieldLabel (description = &quot;Segment Timeout 3-30 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = no)
set var eapsSPSegmentTimeout 3

# @VariableFieldLabel (description = &quot;Segment Port Health Interval 1-10 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = no)
set var eapsSPOldSegmentInterval &quot;&quot;

# @VariableFieldLabel (description = &quot;Segment Timeout 3-30 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = no)
set var eapsSPOldSegmentTimeout &quot;&quot;

# @VariableFieldLabel (description = &quot;Segment Timeout Expiry Action&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes,
#     validValues = [segment-down,send-alert])
set var eapsSPOldSegmentExpiryAction &quot;&quot;

# @SectionEnd
# @MetaDataEnd

##########################################################################
##########################################################################
# CONFIGURATION DETAIL
##########################################################################

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Role Validation
#####################################################################
proc validateEapsSharedPortRole {inPortNum
                                 inMode
                                 inOldMode} {
    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF

    IF (![expr [string length $inPortNum] &gt; 0]) THEN
       error &quot;FAILED: EAPS Shared-Port Num is empty.&quot;
    ENDIF

    IF (![expr [string length $inMode] &gt; 0]) THEN
       error &quot;FAILED: EAPS Shared-Port Mode is empty.&quot;
    ENDIF

    IF (![expr [string length $inOldMode] &gt; 0]) THEN
       error &quot;FAILED: Old EAPS Shared-Port Mode is empty.&quot;
    ENDIF
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Timers Validation
#####################################################################
proc validateEapsSharedPortTimers {inPortNum
                                   inCommonPathInterval
                                   inCommonPathTimeout
                                   inSegmentInterval
                                   inSegmentTimeout} {
    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF

    IF (![expr [string length $inPortNum] &gt; 0]) THEN
       error &quot;FAILED: EAPS Shared-Port Num is empty.&quot;
    ENDIF

    IF (![expr [string length $inCommonPathInterval] &gt; 0]) THEN
       error &quot;FAILED: EAPS Common-Path Health Interval is empty.&quot;
    ENDIF

    IF (![expr [string length $inCommonPathTimeout] &gt; 0]) THEN
       error &quot;FAILED: EAPS Common-Path Timeout is empty.&quot;
    ENDIF

    IF (![expr [string length $inSegmentInterval] &gt; 0]) THEN
       error &quot;FAILED: EAPS Segment Health Interval is empty.&quot;
    ENDIF

    IF (![expr [string length $inSegmentTimeout] &gt; 0]) THEN
       error &quot;FAILED: EAPS Segment Timeout is empty.&quot;
    ENDIF
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Role Modification
#####################################################################
proc modifyEapsSharedPortRole {inPortNum
                               inMode
                               inOldMode} {

    validateEapsSharedPortRole $inPortNum \
                               $inMode \
                               $inOldMode

    global isExos

    if {[string match $isExos true]} {
        configure eaps config-warnings off
    }

    if {[catch {
       configure eaps shared-port $inPortNum mode $inOldMode
    } errMsgText ]} {
       error &quot;FAILED: Can't set role $inMode on Shared-Port $inPortNum $errMsgText&quot;
    }
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Timers Modification
#####################################################################
proc modifyEapsSharedPortTimers {inPortNum
                                 inCommonPathInterval
                                 inCommonPathTimeout
                                 inSegmentInterval
                                 inSegmentTimeout
                                 inOldSegmentTimeout
                                 inOldSegmentInterval
                                 inOldSegmentExpiryAction
                                 } {

    global isExos

    validateEapsSharedPortTimers $inPortNum \
                                 $inCommonPathInterval \
                                 $inCommonPathTimeout \
                                 $inOldSegmentInterval \
                                 $inOldSegmentTimeout



    if {[string match $isExos true]} {
        configure eaps config-warnings off
    }

    set var isSharedLinkTimerSupported [isATLPropertySupported EAPS_SHAREDPORT_TIMER_SUPPORT]
    IF ($isSharedLinkTimerSupported) THEN

       if {$inOldSegmentTimeout &lt; $inSegmentInterval} {
            if {[catch {
                   configure eaps shared-port $inPortNum segment-timers health-interval $inOldSegmentInterval
                } errMsgText ]} {
               error &quot;FAILED: Can't set Segment Health-Interval $inOldSegmentInterval on Shared-Port $inPortNum $errMsgText&quot;
            }
            if {[catch {
                   configure eaps shared-port $inPortNum segment-timers timeout $inOldSegmentTimeout
            } errMsgText ]} {
                error &quot;FAILED: Can't set Segment Timeout $inOldSegmentTimeout on Shared-Port $inPortNum $errMsgText&quot;
            }
       } elseif {$inOldSegmentTimeout &gt; $inSegmentInterval} {
            if {[catch {
                   configure eaps shared-port $inPortNum segment-timers timeout $inOldSegmentTimeout
            } errMsgText ]} {
                error &quot;FAILED: Can't set Segment Timeout $inOldSegmentTimeout on Shared-Port $inPortNum $errMsgText&quot;
            }
            if {[catch {
                   configure eaps shared-port $inPortNum segment-timers health-interval $inOldSegmentInterval
               } errMsgText ]} {
               error &quot;FAILED: Can't set Segment Health-Interval $inOldSegmentInterval on Shared-Port $inPortNum $errMsgText&quot;
            }
       }
       if {[catch {
           configure eaps shared-port $inPortNum segment-timers expiry-action $inOldSegmentExpiryAction
       } errMsgText ]} {
           error &quot;FAILED: Can't set Segment Expiry-Action $inSegmentExpiryAction on Shared-Port $inPortNum $errMsgText&quot;
       }
    ELSE
       if {[catch {
           configure eaps shared-port $inPortNum segment-timeout expiry-action $inOldSegmentExpiryAction
       } errMsgText ]} {
           error &quot;FAILED: Can't set Segment Expiry-Action $inOldSegmentExpiryAction on Shared-Port $inPortNum $errMsgText&quot;
       }
    ENDIF
}

##################################################################
# TCL Procedure for EAPS Shared-Port Modification
# after validating all parameters
##################################################################
proc rollbackEapsSharedPortModify {inModifyAction
                                   inPortNum
                                   inMode
                                   inOldMode
                                   inCommonPathInterval
                                   inCommonPathTimeout
                                   inSegmentInterval
                                   inSegmentTimeout
                                   inOldSegmentTimeout
                                   inOldSegmentInterval
                                   inOldSegmentExpiryAction
                                   } {

    global isExos

    if {[string match $isExos true]} {
        create log entry &quot;START-Modify-Rollback EAPS Shared-Port&quot;
    }

    switch $inModifyAction {
       Modify_Role {
       modifyEapsSharedPortRole $inPortNum \
                                $inMode \
                                $inOldMode
       }
       Modify_Timers {
       modifyEapsSharedPortTimers $inPortNum \
                                  $inCommonPathInterval \
                                  $inCommonPathTimeout \
                                  $inSegmentInterval \
                                  $inSegmentTimeout \
                                  $inOldSegmentTimeout \
                                  $inOldSegmentInterval \
                                  $inOldSegmentExpiryAction

       }
       default {
        error &quot;FAILED: Invalid EAPS Shared-Port Modify Action&quot;
       }
    }

    if {[string match $isExos true]} {
        create log entry &quot;FINISH-Modify-Rollback EAPS Shared-Port&quot;
    }
}

############################################################################
# CLI Configuration Starting on the Switch
############################################################################
setCliErrorHandling $abortOnCliError

rollbackEapsSharedPortModify $eapsSPModifyAction \
                             $eapsSPPortNum \
                             $eapsSPMode \
                             $eapsSPOldMode \
                             $eapsSPCommonPathInterval \
                             $eapsSPCommonPathTimeout \
                             $eapsSPSegmentInterval \
                             $eapsSPSegmentTimeout \
                             $eapsSPOldSegmentTimeout \
                             $eapsSPOldSegmentInterval \
                             $eapsSPOldSegmentExpiryAction


</content>
<contexts></contexts>
<supprotedGroups>,ALL,</supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
