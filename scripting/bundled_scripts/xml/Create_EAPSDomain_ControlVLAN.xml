<!-- This file is generated by system. Do not edit this file. -->
<script name="Create_EAPSDomain_ControlVLAN">
<comments>This script creates control VLAN, EAPS domain and adds control VLAN to EAPS domain</comments>
<content>#@METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# scripting.Script        : EAPS Domain and Control Vlan Creation
#############################################################################
# Revision      : 1.0
# Last Updated  : 07-JAN-2010
#############################################################################
# Author Name   : NMS Team
#############################################################################
# Purpose:
#############################################################################
# 1.  Create Tagged control VLAN
# 2.  Assign the control VLAN to a QoS Profile
# 3.  Create EAPS domain
# 3.  Add the control VLAN to a EAPS domain
# 4.  Enable EAPS domain
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;Creates EAPS Domain and Control VLAN&quot;
# @SectionStart (description = &quot;EAPS Domain and Control VLAN Params&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

################################################################################
# EAPS Definition
################################################################################

# @VariableFieldLabel (description = &quot;EAPS Domain Name&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsDMDomainName &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Fail Time, 2-300 Seconds&quot;
#     type          = String,
#     scope         = global,
#     required      = yes)
set var eapsDMFailTime 2

# @VariableFieldLabel (description = &quot;EAPS Hello Time, 0-15 Seconds&quot;
#     type          = String,
#     scope         = global,
#     required      = yes)
set var eapsDMHelloTimeSec 0

# @VariableFieldLabel (description = &quot;EAPS Hello Time, 0-999 Ms, Min 100&quot;
#     type          = String,
#     scope         = global,
#     required      = yes)
set var eapsDMHelloTimeMSec 100

# @VariableFieldLabel (description = &quot;EAPS Control VLAN Name&quot;,
#     type        = VLAN_NAME,
#     scope       = global,
#     required    = yes)
set var eapsDMControlVLanName &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Control VLAN Tag&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsDMControlVLanTag &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Control VLAN QoS Profile&quot;
#     type         = String,
#     scope        = global,
#     required     = yes,
#     readonly     = yes)
set var eapsDMControlVLanQPNum 8

# @VariableFieldLabel (description = &quot;EAPS Node Primary Port&quot;
#     type        = String,
#     scope       = device,
#     required    = yes)
set var eapsDMPrimaryPort  &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node Secondary Port&quot;
#     type        = String,
#     scope       = device,
#     required    = yes)
set var eapsDMSecondaryPort  &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node Role&quot;
#     type        = String,
#     scope       = device,
#     required    = yes,
#     validValues = [master,transit])
set var eapsDMNodeRole transit

# @SectionEnd
# @MetaDataEnd

################################################################################
################################################################################
# CONFIGURATION DETAIL
################################################################################

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

    global abort_on_error

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

#####################################################################
# TCL Procedure for EAPS Domain Parameter Validation
#####################################################################
proc validateEapsDomainParams {inDomainName
                               inCtrlVLanName
                               inCtrlVLanTag} {
    global abort_on_error
    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF

    IF (![expr [string length $inDomainName] &gt; 0]) THEN
       error &quot;FAILED: EAPS Domain Name is empty.&quot;
    ENDIF

    IF (![expr [string length $inCtrlVLanName] &gt; 0]) THEN
       error &quot;FAILED: Control VLAN Name is empty.&quot;
    ENDIF

    IF (![expr [string length $inCtrlVLanTag] &gt; 0]) THEN
       error &quot;FAILED: Control VLAN Tag is empty.&quot;
    ENDIF
}

############################################################################
# TCL Procedure for EAPS Control VLAN Creation
############################################################################
proc createEapsControlVLan {inCtrlVLanName
                            inCtrlVLanTag
                            inCtrlVLanQPNum} {
    global abort_on_error

    if {[catch {
       create vlan $inCtrlVLanName
    } errMsgText]} {
       error &quot;FAILED: Cannot create Control VLan $inCtrlVLanName $errMsgText&quot;
    }

    if {[catch {
       config vlan $inCtrlVLanName tag $inCtrlVLanTag
    } errMsgText]} {
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't set Tag $inCtrlVLanTag to Control VLan $inCtrlVLanName $errMsgText&quot;
    }

     set var isEapsControlVlanInQP8 [isATLPropertySupported EAPS_CONTROL_VLAN_IN_QP8]
    IF (!$isEapsControlVlanInQP8) THEN
      if {[catch {
        config vlan $inCtrlVLanName qosprofile qp$inCtrlVLanQPNum
      } errMsgText]} {
        delete vlan $inCtrlVLanName
        error &quot;FAILED: Can't set QoS to Control VLan $inCtrlVLanName $errMsgText&quot;
      }
    ENDIF

   
}

############################################################################
# TCL Procedure for EAPS Domain Creation
############################################################################
proc createEapsDomain {inDomainName
                       inNodeRole
                       inFailTime
                       inHelloSec
                       inHelloMSec
                       inPrimaryPort
                       inSecondaryPort
                       inCtrlVLanName} {
    global abort_on_error
    global isExos

    if {[catch {
       create eaps $inDomainName
    } errMsgText]} {
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't create EAPS Domain $inDomainName $errMsgText&quot;
    }

    if {[string match $isExos true]} {
      configure eaps config-warnings off
    }

    if {[catch {
       configure eaps $inDomainName mode $inNodeRole
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't set EAPS Domain $inDomainName to $inNodeRole $errMsgText&quot;
    }

    if {[catch {
       configure eaps $inDomainName primary port $inPrimaryPort
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't set Primary Port $inPrimaryPort on EAPS Domain $inDomainName $errMsgText&quot;
    }

    if {[catch {
       configure eaps $inDomainName secondary port $inSecondaryPort
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't set Secondary Port $inSecondaryPort on EAPS Domain $inDomainName $errMsgText&quot;
    }

    if {[catch {
       configure eaps $inDomainName failtime $inFailTime
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't set Failtime $inFailTime for EAPS Domain $inDomainName $errMsgText&quot;
    }

    if {[catch {

      if {[string match $isExos true]} {
           configure eaps $inDomainName hellotime $inHelloSec $inHelloMSec
       } else {
         configure eaps $inDomainName hellotime $inHelloSec
       }

    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't set Hellotime $inHelloSec on EAPS Domain $inDomainName $errMsgText&quot;
    }

    if {[catch {
       configure vlan $inCtrlVLanName add port $inPrimaryPort tagged
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't add Primary Port $inPrimaryPort to Control VLan $inCtrlVLanName $errMsgText&quot;
    }

    if {[catch {
       configure vlan $inCtrlVLanName add port $inSecondaryPort tagged
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't add Secondary Port $inSecondaryPort to Control VLan $inCtrlVLanName $errMsgText&quot;
    }

    if {[catch {
       configure $inDomainName add control $inCtrlVLanName
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't add Control VLan $inCtrlVLanName to EAPS Domain $inDomainName $errMsgText&quot;
    }

    if {[catch {
       enable eaps
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't enable EAPS Protocol $errMsgText&quot;
    }

    if {[catch {
       enable eaps $inDomainName
    } errMsgText]} {
       delete eaps $inDomainName
       delete vlan $inCtrlVLanName
       error &quot;FAILED: Can't enable EAPS Domain $inDomainName $errMsgText&quot;
    }
}

##################################################################
# TCL Procedure for EAPS Domain and Control VLAN Creation
# after validating all parameters
##################################################################
proc handleEapsDomainCtrlVLanCreate {inDomainName
                                     inNodeRole
                                     inFailTime
                                     inHelloSec
                                     inHelloMSec
                                     inPrimaryPort
                                     inSecondaryPort
                                     inCtrlVLanName
                                     inCtrlVLanTag
                                     inCtrlVLanQPNum} {
    global abort_on_error

  global isExos

  if {[string match $isExos true]} {
      create log entry &quot;Starting EAPS Domain and Control VLAN Creation on Switch&quot;
  }

    validateEapsDomainParams $inDomainName \
                             $inCtrlVLanName \
                             $inCtrlVLanTag

    createEapsControlVLan $inCtrlVLanName \
                          $inCtrlVLanTag \
                          $inCtrlVLanQPNum

    createEapsDomain $inDomainName \
                     $inNodeRole \
                     $inFailTime \
                     $inHelloSec \
                     $inHelloMSec \
                     $inPrimaryPort \
                     $inSecondaryPort \
                     $inCtrlVLanName

  if {[string match $isExos true]} {
      create log entry &quot;Finished EAPS Domain and Control VLAN Creation on Switch&quot;
     }
}

############################################################################
# CLI Configuration Starting on the Switch
############################################################################
setCliErrorHandling $abortOnCliError

handleEapsDomainCtrlVLanCreate $eapsDMDomainName \
                               $eapsDMNodeRole \
                               $eapsDMFailTime \
                               $eapsDMHelloTimeSec \
                               $eapsDMHelloTimeMSec \
                               $eapsDMPrimaryPort \
                               $eapsDMSecondaryPort \
                               $eapsDMControlVLanName \
                               $eapsDMControlVLanTag \
                               $eapsDMControlVLanQPNum
</content>
<contexts></contexts>
<supprotedGroups>,ALL,</supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<rollbackScript>Rollback_CRE_EAPSDomain_ControlVLAN</rollbackScript>
<postprocessScript>Sync_CRE_EAPSDomain_ControlVLAN</postprocessScript>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
