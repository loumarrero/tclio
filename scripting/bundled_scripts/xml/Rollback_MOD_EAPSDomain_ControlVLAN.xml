<!-- This file is generated by system. Do not edit this file. -->
<script name="Rollback_MOD_EAPSDomain_ControlVLAN">
<comments>This script rollsback modification of EAPS Domain Parameters</comments>
<content>#@METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# scripting.Script        : Rollback of EAPS Domain Parameters Modification 
#############################################################################
# Revision      : 1.0
# Last Updated  : 07-JAN-2010
#############################################################################
# Author Name   : NMS Team
#############################################################################
# Purpose:
#############################################################################
# 1.  Modify Tagged control VLAN
# 2.  Assign the control VLAN to a QoS Profile
# 3.  Modify EAPS domain
# 3.  Add the control VLAN to a EAPS domain
# 4.  Enable EAPS domain
#############################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;Rollsback EAPS Domain Parameter Modifications&quot;
# @SectionStart (description = &quot;EAPS Domain Modify-Rollback Params&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

# @VariableFieldLabel (description = &quot;Choose Modify-Rollback Action&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [Modify_Role,Modify_Timers])
set var eapsDMModifyAction Modify_Timers

################################################################################
# EAPS Definition
################################################################################

# @VariableFieldLabel (description = &quot;EAPS Domain Name&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsDMDomainName &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Fail Time, 2-300 Seconds&quot;
#     type          = String,
#     scope         = global,
#     required      = no)
set var eapsDMFailTime &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Hello Time, 0-15 Seconds&quot;
#     type          = String,
#     scope         = global,
#     required      = no)
set var eapsDMHelloTimeSec &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Hello Time, 0-999 Ms, Min 100&quot;
#     type          = String,
#     scope         = global,
#     required      = no)
set var eapsDMHelloTimeMSec &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node Old-Primary Port&quot;
#     type        = String,
#     scope       = device,
#     required    = no)
set var eapsDMOldPrimaryPort &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node Old-Secondary Port&quot;
#     type        = String,
#     scope       = device,
#     required    = no)
set var eapsDMOldSecondaryPort &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node New-Primary Port&quot;
#     type        = String,
#     scope       = device,
#     required    = no)
set var eapsDMNewPrimaryPort &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node New-Secondary Port&quot;
#     type        = String,
#     scope       = device,
#     required    = no)
set var eapsDMNewSecondaryPort &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node Old-Role&quot;
#     type        = String,
#     scope       = device,
#     required    = no,
#     validValues = [master,transit])
set var eapsDMOldNodeRole &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Node New-Role&quot;
#     type        = String,
#     scope       = device,
#     required    = no,
#     validValues = [master,transit])
set var eapsDMNewNodeRole &quot;&quot;

# @SectionEnd
# @MetaDataEnd

################################################################################
################################################################################
# CONFIGURATION DETAIL
################################################################################

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

#####################################################################
# TCL Procedure for EAPS Domain Parameter Validation
#####################################################################
proc validateEapsDomainParams {inDomainName} {
    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF
    
    IF (![expr [string length $inDomainName] &gt; 0]) THEN
       error &quot;FAILED: EAPS Domain Name is empty.&quot;
    ENDIF
}

############################################################################
# TCL Procedure for EAPS Domain Role Modification for the Node
############################################################################
proc modifyEapsDomainRole {inDomainName
                           inOldNodeRole
                           inOldPrimaryPort
                           inOldSecondaryPort} {
    global abort_on_error
    
    global isExos

	if {[string match $isExos true]} {
    	configure eaps config-warnings off
   	}

    if {[catch {
       disable eaps $inDomainName
    } errMsgText]} {
       error &quot;FAILED: Can't disable EAPS Domain $inDomainName $errMsgText&quot;
    }
    
    if {[catch {
       unconfigure eaps $inDomainName primary port
    } errMsgText]} { 
       error &quot;FAILED: Can't remove Primary Port from EAPS Domain $inDomainName $errMsgText&quot;
    }
    
    if {[catch {
       unconfigure eaps $inDomainName secondary port
    } errMsgText]} {
       error &quot;FAILED: Can't remove Secondary Port from EAPS Domain $inDomainName $errMsgText&quot;
    }

    if {[catch {
       configure eaps $inDomainName primary port $inOldPrimaryPort
    } errMsgText]} { 
       error &quot;FAILED: Can't restore Old-Primary Port $inOldPrimaryPort on EAPS Domain $inDomainName $errMsgText&quot;
    }
    
    if {[catch {
       configure eaps $inDomainName secondary port $inOldSecondaryPort
    } errMsgText]} {
       error &quot;FAILED: Can't restore Old-Secondary Port $inOldSecondaryPort on EAPS Domain $inDomainName $errMsgText&quot;
    }
    
    if {[catch {
       configure eaps $inDomainName mode $inOldNodeRole
    } errMsgText]} {
       error &quot;FAILED: Can't restore EAPS Domain $inDomainName to $inOldNodeRole $errMsgText&quot;
    }
    
    if {[catch {
       enable eaps $inDomainName
    } errMsgText]} { 
       error &quot;FAILED: Can't re-enable EAPS Domain $inDomainName $errMsgText&quot;
    }
}

############################################################################
# TCL Procedure for EAPS Domain Timer Modification for the Node
############################################################################
proc modifyEapsDomainTimers {inDomainName
                             inFailTime
                             inHelloSec
                             inHelloMSec} {
    
    global isExos
    
    if {[string match $isExos true]} {
    	configure eaps config-warnings off
   	}
    
    
    if {[catch {
       configure eaps $inDomainName failtime $inFailTime
    } errMsgText]} {
       error &quot;FAILED: Can't set Failtime $inFailTime for EAPS Domain $inDomainName $errMsgText&quot;
    }
    
    if {[catch {

       if {[string match $isExos true]} {
       		configure eaps $inDomainName hellotime $inHelloSec $inHelloMSec
     	} else {
     		configure eaps $inDomainName hellotime $inHelloSec
     	}
     	
    } errMsgText]} {
       error &quot;FAILED: Can't set Hellotime $inHelloSec on EAPS Domain $inDomainName $errMsgText&quot;
    }
}

##################################################################
# TCL Procedure for EAPS Domain Modification
# after validating all parameters
##################################################################
proc rollbackEapsDomainModify {inModifyAction
                               inDomainName
                               inOldNodeRole
                               inNewNodeRole
                               inFailTime
                               inHelloSec
                               inHelloMSec
                               inOldPrimaryPort
                               inOldSecondaryPort
                               inNewPrimaryPort
                               inNewSecondaryPort} {
	
	global isExos
	
	if {[string match $isExos true]} {
    	create log entry &quot;START-Modify-Rollback EAPS Domain&quot;
	}
	
    validateEapsDomainParams $inDomainName

    switch $inModifyAction {
       Modify_Role {
       modifyEapsDomainRole $inDomainName \
                            $inOldNodeRole \
                            $inOldPrimaryPort \
                            $inOldSecondaryPort
       }
       Modify_Timers {
       modifyEapsDomainTimers $inDomainName \
                              $inFailTime \
                              $inHelloSec \
                              $inHelloMSec
       }
       default {
        error &quot;FAILED: Invalid EAPS-Domain Modify Action&quot;
       }
    }
    
    if {[string match $isExos true]} {
    	create log entry &quot;FINISH-Modify-Rollback EAPS Domain&quot;
	}
}

############################################################################
# CLI Configuration Starting on the Switch
############################################################################
setCliErrorHandling $abortOnCliError

rollbackEapsDomainModify $eapsDMModifyAction \
                         $eapsDMDomainName \
                         $eapsDMOldNodeRole \
                         $eapsDMNewNodeRole \
                         $eapsDMFailTime \
                         $eapsDMHelloTimeSec \
                         $eapsDMHelloTimeMSec \
                         $eapsDMOldPrimaryPort \
                         $eapsDMOldSecondaryPort \
                         $eapsDMNewPrimaryPort \
                         $eapsDMNewSecondaryPort
</content>
<contexts></contexts>
<supprotedGroups>,ALL,</supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
