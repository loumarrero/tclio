<!-- This file is generated by system. Do not edit this file. -->
<script name="Rollback_CRE_EAPSSharedPort">
<comments>This script rollsback a previously created EAPS Shared Port</comments>
<content>#@METADATASTART
#@DetailDescriptionStart
########################################################################
# Extreme Networks(R) CLI Scripting Library
# Note          : EAPS Shared-Port Configuration Management
# scripting.Script        : EAPS Shared Port Creation
########################################################################
# Revision      : 1.0
# Last Updated  : 08-JAN-2010
########################################################################
# Author Name   : NMS Team
########################################################################
# Purpose:  
########################################################################
# 1. Create EAPS Shared Port
# 2. Enable EAPS configurations globally
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;This script rollsback creation of EAPS Shared-Port&quot;
# @SectionStart (description = &quot;EAPS Shared-Port Create-Rollback Params&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

######################################################################
# EAPS Shared-Port Parameters Definition
######################################################################

# @VariableFieldLabel (description = &quot;EAPS Shared Port Number&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes)
set var eapsSPPortNum &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Shared Link-ID, 1-65535&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPLinkId &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Shared Port Mode&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes,
#     validValues = [controller,partner])
set var eapsSPMode controller

# @VariableFieldLabel (description = &quot;Common Path Health Interval 1-10 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPCommonPathInterval 1

# @VariableFieldLabel (description = &quot;Common Path Timeout 3-30 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPCommonPathTimeout 3

# @VariableFieldLabel (description = &quot;Segment Port Health Interval 1-10 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPSegmentInterval 1

# @VariableFieldLabel (description = &quot;Segment Timeout 3-30 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPSegmentTimeout 3

# @VariableFieldLabel (description = &quot;Segment Timeout Expiry Action&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes,
#     validValues = [segment-down,send-alert])
set var eapsSPSegmentExpiryAction segment-down

# @SectionEnd
# @MetaDataEnd

##########################################################################
# CONFIGURATION DETAIL
##########################################################################

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Parameter Validation
#####################################################################
proc validateEapsSharedPortParams {inPortNum} {

    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF
    
    IF (![expr [string length $inPortNum] &gt; 0]) THEN
       error &quot;FAILED: EAPS Shared-Port Num is empty.&quot;
    ENDIF
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Deletion
#####################################################################
proc deleteEapsSharedPort {inPortNum} {

    if {[catch {
       delete eaps shared-port $inPortNum
    } errMsgText ]} {
       puts &quot;FAILED: Can't delete EAPS Shared-Port $inPortNum $errMsgText&quot;
    }
}

##################################################################
# TCL Procedure for EAPS Shared-Port Creation
# after validating all parameters
##################################################################
proc rollbackEapsSharedPortCreate {inPortNum
                                   inLinkId
                                   inMode
                                   inCommonPathInterval
                                   inCommonPathTimeout
                                   inSegmentInterval
                                   inSegmentTimeout
                                   inSegmentExpiryAction} {

	global isExos
	
	if {[string match $isExos true]} {
    	create log entry &quot;START-Create-Rollback EAPS Shared-Port&quot;
	}
	
    validateEapsSharedPortParams $inPortNum

    deleteEapsSharedPort $inPortNum
    
    if {[string match $isExos true]} {
    	create log entry &quot;FINISH-Create-Rollback EAPS Shared-Port&quot;
	}
}

############################################################################
# CLI Configuration Starting on the Switch
############################################################################
setCliErrorHandling $abortOnCliError

rollbackEapsSharedPortCreate $eapsSPPortNum \
                             $eapsSPLinkId \
                             $eapsSPMode \
                             $eapsSPCommonPathInterval \
                             $eapsSPCommonPathTimeout \
                             $eapsSPSegmentInterval \
                             $eapsSPSegmentTimeout \
                             $eapsSPSegmentExpiryAction
</content>

<contexts></contexts>
<supprotedGroups>,ALL,</supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
