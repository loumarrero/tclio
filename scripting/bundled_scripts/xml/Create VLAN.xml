<!-- This file is generated by system. Do not edit this file. -->
<script name="Create VLAN">
  <comments>Factory script to Create and provision new VLAN</comments>
  <content># @METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# Note:  This script is an example and has undergone limited testing.  Please modify and test for your own environment.
# scripting.Script        : VLAN Creation
# Revision      : 1.1
# Last Updated  : May 30, 2009
#
# Purpose:  Create and configure a VLAN
#
#
#1.  Create Tagged or Untagged VLAN
#2.  Configure layer 3 setting for the VLAN
#3.  Enable/Disable IP forwarding for the VLAN
#4.  Assign the VLAN to a QoS Profile
#5.  add the VLAN to a EAPS domain
#6.  apply protocol filter to the VLAN
#
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;Basic best practice deployment of Extreme switches. Please see scripting.Script View tab for details.&quot;
# @SectionStart ( description = &quot;VLAN Basics&quot;)
# @VariableFieldLabel ( description = &quot;Abort on error?&quot;,
#    type          = String,
#   scope       = global,
#   required    = yes,
#   validValues=[yes,no])
set var abort_when_error yes

################################################################################
# VLAN Definition
################################################################################
# @VariableFieldLabel (description = &quot;VLAN name&quot;,
#      type        = String,
#     scope       = global,
#      required    = yes
#    )
set var vlanname ExtremeVlan1

# @VariableFieldLabel (description   = &quot;VLAN tag&quot;, type = String,
#          scope         = global
#    )
set var vlannametag &quot;&quot;

# @VariableFieldLabel (description   = &quot;QoS profile (eg. leave blank for default QoS)&quot;
#      type          = String,
#     scope         = global
#    )
set var vlannameqos &quot;&quot;

# @VariableFieldLabel (description   = &quot;Protocol filter&quot;
#      type          = String,
#     scope         = global
#    )
set var protocolfilter &quot;&quot;

# @VariableFieldLabel (description = &quot;Tagged ports&quot;
#      type        = String
#     scope       = device
#    )
set var taggedPorts  &quot;&quot;

# @VariableFieldLabel (description   = &quot;Untagged ports&quot;,
#      type        = String
#     scope       = device
#    )
set var untaggedPorts  &quot;&quot;

# @SectionEnd

# @SectionStart (description = &quot;Assign IP address (optional)&quot;)

################################################################################
# Layer 3 configuration
################################################################################

# @VariableFieldLabel (description = &quot;Assign IP address to the VLAN?&quot;
#       validValues = [yes,no],
#      scope       = global,
#      required    = yes
#    )
set var ynAssignIP no

# @VariableFieldLabel (description   = &quot;VLAN IPv4 address (x.x.x.x)&quot;
#      type          = String
#     scope         = device, required = yes
#    )
set var vlannameipa &quot;&quot;

# @VariableFieldLabel (description   = &quot;VLAN IPv4 subnet mask (x.x.x.x)&quot;,
#      type          = String
#     scope         = device
#    )
set var vlansubnetipaddress  &quot;&quot;


################################################################################
# IP Forwarding
################################################################################

# @VariableFieldLabel (description = &quot;Enable IP forwarding for this vlan?&quot;
#       validValues = [yes,no],
#      scope       = device,
#      required    = yes
#    )
set var ynipforwarding no
# @SectionEnd
# @SectionStart (description = &quot;Protect vlan (optional)&quot;)
################################################################################
# EAPS domain
################################################################################
# @VariableFieldLabel (description = &quot;Protect VLAN by EAPS domain (as control or protected vlan)?&quot;
#       validValues = [yes,no],
#      scope       = global, required = yes
#    )
set var ynprotectvlan no

# @VariableFieldLabel (description   = &quot;EAPS domain name&quot;
#      type          = String
#     scope         = global, required = yes
#    )
set var eapsdomainname &quot;&quot;

# @VariableFieldLabel (description   = &quot;VLAN type?&quot;,
#       type          = String, validValues = [control,protected],
#     scope         = global, required = yes
#    )
set var vlantype protected

# @SectionEnd
# @MetaDataEnd
################################################################################
################################################################################
# CONFIGURATION DETAIL
################################################################################
################################################################################
# CLI MODE
################################################################################
IF ($abort_when_error == no) THEN
 configure cli mode scripting ignore-error
ELSE
  configure cli mode scripting abort-on-error
ENDIF

IF (![string equal $vendor &quot;Extreme&quot;]) THEN
   error &quot;This script is only supported for Extreme switches.&quot;
ENDIF


################################################################################
# VLAN 1 Creation Parameters
################################################################################
create vlan $vlanname

if {[catch {

  IF ([expr [string length $vlannametag] &gt; 0]) THEN
    config vlan $vlanname tag $vlannametag
  ENDIF

IF ([expr [string length $vlannameqos] &gt; 0]) THEN
    config vlan $vlanname qosprofile $vlannameqos
ENDIF

IF ([expr [string length $protocolfilter] &gt; 0]) THEN
   config vlan $vlanname protocol $protocolfilter
ENDIF

 IF ([string equal $ynAssignIP yes] &amp;&amp; [expr [string length $vlannameipa] &gt; 0]) then
   IF ([expr [string length $vlansubnetipaddress] &gt; 0] ) THEN
     config vlan $vlanname ipaddress $vlannameipa $vlansubnetipaddress
   ELSE
     config vlan $vlanname ipaddress $vlannameipa
   ENDIF
ENDIF


IF ([string equal $ynipforwarding yes]) THEN
    enable ipforwarding vlan $vlanname
ENDIF


IF ([string equal $ynprotectvlan yes]) THEN
    IF ([expr [string length $eapsdomainname] &gt; 0]) THEN
       config eaps $eapsdomainname add $vlantype vlan $vlanname
    ENDIF
ENDIF

IF ([expr [string length $taggedPorts] &gt; 0]) THEN
  configure vlan $vlanname add port $taggedPorts tagged
  regexp {.*Adding EAPS ring ports to a VLAN could cause a loop.*} ${CLI.OUT} foundWarning1
  IF ([info exists foundWarning1]) THEN
  CLI yes
  ENDIF
ENDIF
IF ([expr [string length $untaggedPorts] &gt; 0]) THEN
  configure vlan $vlanname add port $untaggedPorts untagged
  regexp {.*Adding EAPS ring ports to a VLAN could cause a loop.*} ${CLI.OUT} foundWarning2
  IF ([info exists foundWarning2]) THEN
  CLI yes
  ENDIF
ENDIF
# sync vlans on this device so that new vlan is shown in the client
PerformSync -scope VLAN
} result ]} {
     error &quot;Error occurred during vlan configuration. $result&quot;
   }


</content>
  <creator>system</creator>
  <contexts>,VLANS,Device,Links,</contexts>
  <supprotedGroups></supprotedGroups>
  <roles>,Administrator,</roles>
  <auditLogEnabled>true</auditLogEnabled>
  <saveConfigOnExit>false</saveConfigOnExit>
  <menuScope>TOOLS</menuScope>
  <scriptTimeout>60</scriptTimeout>
  <defaultCategory>VLAN</defaultCategory>
</script>
