<!-- This file is generated by system. Do not edit this file. -->
<script name="Sync_CRE_EAPSProtected_BVLAN">
<comments>This script synchronizes EAPS Protected B-VLANs</comments>
<content># @METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# scripting.Script        : Synchronization of EAPS protected B-VLANs
#############################################################################
# Revision      : 1.0
# Last Updated  : 10-JAN-2010
#############################################################################
# Author Name   : NMS Team
#############################################################################
# Purpose:
#############################################################################
# 1.  Save EAPS Protected B-VLAN Configuration
#############################################################################
#@DetailDescriptionEnd

# @ScriptDescription "Synchronizes EAPS protected B-VLAN Config"

# @SectionStart (description = &quot;Protected BVLAN Sync Params&quot;)
#############################################################################
# Protected B-VLAN Sync Parameters definitions
#############################################################################

# @VariableFieldLabel (description = &quot;Comma Listed BVLAN_Name+BVLAN_Tag+BVLAN_QP&quot;,
#   type        = String,
#   scope       = device,
#   required    = yes)
set var eapsProtBVLanNameTagQPSeq &quot;&quot;

# @VariableFieldLabel (description = &quot;Comma Listed EAPS Domain Names&quot;
#   type        = String,
#   scope       = global,
#   required    = yes)
set var eapsProtDomainNameSeq &quot;&quot;

# @SectionEnd
# @MetaDataEnd

################################################################################
# Procedure to Validate a single 3-Tuple of the form 'VLAN-Name+Tag+QP-Num'
################################################################################
proc validateVLanNameTagQPTuple {inNameTagQP
                                 outVLanName} {
     global abort_on_error

     upvar $outVLanName tmpVLanName

     set tmpNameTagQPList [split $inNameTagQP '+']

     if {[llength $tmpNameTagQPList] != 3} {
         error &quot;Invalid VLAN-Name,Tag,QP-Num Tuple=>$inNameTagQP&quot;
     }
     set tmpVLanName [lindex $tmpNameTagQPList 0]
}


################################################################################
# Procedure to Validate List of 3-Tuples of the form 'VLAN-Name+Tag+QP-Num'
################################################################################
proc validateVLanNameTagQPTupleSeq {inNameTagQPSeq
                                    outVLanNameList} {
     global abort_on_error

     set tmpNameTagQPList [split $inNameTagQPSeq ,]

     if {[llength $tmpNameTagQPList] == 0} {
        error &quot;FAILED: VLAN-Name, Tag, QP Tuple List is empty.&quot;
     }

     upvar $outVLanNameList tmpVLanNameList


     foreach currTuple $tmpNameTagQPList {
        set outVLanName ""
        validateVLanNameTagQPTuple $currTuple \
                                   outVLanName
        append tmpVLanNameList $outVLanName
        append tmpVLanNameList ","
     }
}

set outVLanNameList ""
validateVLanNameTagQPTupleSeq $eapsProtBVLanNameTagQPSeq \
                                  outVLanNameList
PerformSync -device $deviceIP -scope PBB -bvlan  [string trimright $outVLanNameList ',']
PerformSync -device $deviceIP -scope EapsDomain -type protected -name $eapsProtDomainNameSeq
</content>
<contexts></contexts>
<supprotedGroups></supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<saveConfigOnExit>true</saveConfigOnExit>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
