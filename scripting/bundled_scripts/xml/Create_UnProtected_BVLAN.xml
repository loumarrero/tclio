<!-- This file is generated by system. Do not edit this file. -->
<script name="Create_UnProtected_BVLAN">
<comments>This scripts creates a unprotected B-VLAN and adds it to Ports</comments>
<content># @METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# scripting.Script        : B-VLAN creation and adding it to a list of Ports (default STP)
#############################################################################
# Revision      : 1.0
# Last Updated  : 26-DEC-2009
#############################################################################
# Author Name   : NMS Team
#############################################################################
# Purpose:
#############################################################################
# 1.  Create B-VLAN
# 2.  Assign the B-VLAN to a QoS Profile
# 3.  Add a List of Ports to the B-VLAN
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;This script creates a B-VLAN and adds a List of Ports&quot;
# @SectionStart (description = &quot;Unprotected B-VLAN Create Params&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

################################################################################
# B-VLAN Definition
################################################################################

# @VariableFieldLabel (description = &quot;802.1ah B-VLAN Name&quot;,
#   type        = VLAN_NAME,
#   scope       = global,
#   required    = yes,
#   readonly    = no)
set var unprotBVLanName &quot;&quot;

# @VariableFieldLabel (description = &quot;802.1ah B-VLAN Tag&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes)
set var unprotBVLanBTag &quot;&quot;

# @VariableFieldLabel (description = &quot;B-VLAN QoS Profile Number&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues =[1,2,3,4,5,6,7,8])
set var unprotBVLanQPNum 8

# @VariableFieldLabel (description = &quot;Comma Listed NNI Ports of B-VLAN&quot;
#   type        = String,
#   scope       = device,
#   required    = yes)
set var unprotBVLanPortSeq &quot;&quot;

set var permitRingPortsAsUni Yes

# @SectionEnd
# @MetaDataEnd

################################################################################
# CONFIGURATION DETAIL
################################################################################

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

     global abort_on_error

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

proc validateVendorName {inVendorName} {

    global abort_on_error

    IF (![string equal $inVendorName &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF
}

############################################################################
# TCL Procedure for B-VLAN Create Parameters Validation
############################################################################
proc validateBVLanCreateParams {inBVLanName
                                inBVLanBTag
                                inBVLanQPNum
                                inBVLanPortList} {
    global abort_on_error

    IF (![expr [string length $inBVLanName] &gt; 0]) THEN
       error &quot;FAILED: B-VLAN Name empty.&quot;
    ENDIF

    IF (![expr [string length $inBVLanBTag] &gt; 0]) THEN
       error &quot;FAILED: B-VLAN Tag empty.&quot;
    ENDIF

    IF (![expr [string length $inBVLanQPNum] &gt; 0]) THEN
       error &quot;FAILED: B-VLAN QoS Profile empty.&quot;
    ENDIF

    IF (![expr [string length $inBVLanPortList] &gt; 0]) THEN
       error &quot;FAILED: B-VLAN Port List empty.&quot;
    ENDIF
}

############################################################################
# TCL Procedure to Create the B-VLAN and add Ports to it
############################################################################
proc create8021ahBVLan {inBVLanName
                        inBVLanBTag
                        inBVLanQPNum
                        inBVLanPortList} {
    global abort_on_error
    global permitRingPortsAsUni

    if {[catch {
       create bvlan $inBVLanName
    } result]} {
       error &quot;FAILED: Could not create bvlan $inBVLanName, $result&quot;
    }

    if {[catch {
       config bvlan $inBVLanName tag $inBVLanBTag
    } result]} {
       delete bvlan $inBVLanName
       error &quot;FAILED: Invalid Tag $inBVLanBTag for BVLan $inBVLanName, $result&quot;
    }

##  if {[catch {
##     config bvlan $inBVLanName qosprofile qp$inBVLanQPNum
##  } result]} {
##     delete bvlan $inBVLanName
##     error &quot;FAILED: Invalid QoS-Profile for BVLan $inBVLanName, $result&quot;
##  }

##  if {[catch {
##     config bvlan ethertype 0x8100
##  } result]} {
##     delete bvlan $inBVLanName
##     error &quot;FAILED: Invalid Ether-Type for BVLan $inBVLanName, $result&quot;
##  }

    if {[catch {
       config bvlan $inBVLanName add ports $inBVLanPortList tagged
       regexp {.*Adding EAPS ring ports to a VLAN could cause a loop.*} ${CLI.OUT} addWarningMsg
       IF ([info exists addWarningMsg]) THEN
       CLI    $permitRingPortsAsUni
       ENDIF
    } result]} {
       delete bvlan $inBVLanName
       error &quot;FAILED: Could not add Ports $inBVLanPortList to BVLan $inBVLanName, $result&quot;
    }
}

############################################################################
# TCL Procedure to validate and Create the 802.1ah B-VLAN and add Ports to it
############################################################################
proc createUnProtectedBVLan {inBVLanName
                             inBVLanBTag
                             inBVLanQPNum
                             inBVLanPortList} {
    global abort_on_error
	global isExos

	if {[string match $isExos true]} {
    	create log entry &quot;Starting Unprotected B-VLAN Creation on Switch&quot;
   	}

    validateBVLanCreateParams $inBVLanName \
                              $inBVLanBTag \
                              $inBVLanQPNum \
                              $inBVLanPortList

    create8021ahBVLan $inBVLanName \
                      $inBVLanBTag \
                      $inBVLanQPNum \
                      $inBVLanPortList

	if {[string match $isExos true]} {
    	create log entry &quot;Finished Unprotected B-VLAN Creation on Switch&quot;
   	}
}

################################################################################
# CLI MODE Settings
################################################################################
setCliErrorHandling $abortOnCliError

validateVendorName $vendor

createUnProtectedBVLan $unprotBVLanName \
                       $unprotBVLanBTag \
                       $unprotBVLanQPNum \
                       $unprotBVLanPortSeq
</content>
<contexts></contexts>
<supprotedGroups></supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<rollbackScript>Rollback_CRE_UnProtected_BVLAN</rollbackScript>
<postprocessScript>Sync_CRE_UnProtected_BVLAN</postprocessScript>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
