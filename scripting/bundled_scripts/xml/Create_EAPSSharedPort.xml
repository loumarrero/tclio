<!-- This file is generated by system. Do not edit this file. -->
<script name="Create_EAPSSharedPort">
<comments>This script creates EAPS Shared Port</comments>
<content>#@METADATASTART
#@DetailDescriptionStart
########################################################################
# Extreme Networks(R) CLI Scripting Library
# Note          : EAPS Shared-Port Configuration Management
# scripting.Script        : EAPS Shared Port Creation
########################################################################
# Revision      : 1.0
# Last Updated  : 26-DEC-2009
########################################################################
# Author Name   : NMS Team
########################################################################
# Purpose:  
########################################################################
# 1. Create EAPS Shared Port
# 2. Enable EAPS configurations globally
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;This script creates EAPS Shared-Port&quot;
# @SectionStart (description = &quot;EAPS Shared-Port Create Params&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

######################################################################
# EAPS Shared-Port Parameters Definition
######################################################################

# @VariableFieldLabel (description = &quot;EAPS Shared Port Number&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes)
set var eapsSPPortNum &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Shared Link-ID, 1-65535&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPLinkId &quot;&quot;

# @VariableFieldLabel (description = &quot;EAPS Shared Port Mode&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes,
#     validValues = [controller,partner])
set var eapsSPMode controller

# @VariableFieldLabel (description = &quot;Common Path Health Interval 1-10 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPCommonPathInterval 1

# @VariableFieldLabel (description = &quot;Common Path Timeout 3-30 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPCommonPathTimeout 3

# @VariableFieldLabel (description = &quot;Segment Port Health Interval 1-10 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPSegmentInterval 1

# @VariableFieldLabel (description = &quot;Segment Timeout 3-30 Secs&quot;,
#     type        = String,
#     scope       = global,
#     required    = yes)
set var eapsSPSegmentTimeout 3

# @VariableFieldLabel (description = &quot;Segment Timeout Expiry Action&quot;,
#     type        = String,
#     scope       = device,
#     required    = yes,
#     validValues = [send-alert,segment-down])
set var eapsSPSegmentExpiryAction segment-down

# @SectionEnd
# @MetaDataEnd

##########################################################################
##########################################################################
# CONFIGURATION DETAIL
##########################################################################

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

     global abort_on_error

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Parameter Validation
#####################################################################
proc validateEapsSharedPortParams {inPortNum
                                   inLinkId
                                   inMode
                                   inCommonPathInterval
                                   inCommonPathTimeout
                                   inSegmentInterval
                                   inSegmentTimeout
                                   inSegmentExpiryAction} {
    global abort_on_error
    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;This script is only supported for Extreme switches.&quot;
    ENDIF    
    
    IF (![expr [string length $inPortNum] &gt; 0]) THEN
       error &quot;FAILED: EAPS Shared-Port Num is empty.&quot;
    ENDIF
    
    IF (![expr [string length $inLinkId] &gt; 0]) THEN
       error &quot;FAILED: EAPS Shared-Link ID is empty.&quot;
    ENDIF
    
    IF (![expr [string length $inMode] &gt; 0]) THEN
       error &quot;FAILED: EAPS Shared-Port Mode is empty.&quot;
    ENDIF

    IF (![expr [string length $inCommonPathInterval] &gt; 0]) THEN
       error &quot;FAILED: EAPS Common-Path Health Interval is empty.&quot;
    ENDIF
    
    IF (![expr [string length $inCommonPathTimeout] &gt; 0]) THEN
       error &quot;FAILED: EAPS Common-Path Timeout is empty.&quot;
    ENDIF
 
    IF (![expr [string length $inSegmentInterval] &gt; 0]) THEN
       error &quot;FAILED: EAPS Segment Health Interval is empty.&quot;
    ENDIF
    
    IF (![expr [string length $inSegmentTimeout] &gt; 0]) THEN
       error &quot;FAILED: EAPS Segment Timeout is empty.&quot;
    ENDIF
    
    IF (![expr [string length $inSegmentExpiryAction] &gt; 0]) THEN
       error &quot;FAILED: EAPS Segment Timeout Expiry Action is empty.&quot;
    ENDIF
}

#####################################################################
# TCL Procedure for EAPS Shared-Port Creation
#####################################################################
proc createEapsSharedPort {inPortNum
                           inLinkId
                           inMode
                           inCommonPathInterval
                           inCommonPathTimeout
                           inSegmentInterval
                           inSegmentTimeout
                           inSegmentExpiryAction} {
    global abort_on_error
    
    global isExos

    if {[catch {
       create eaps shared-port $inPortNum
    } errMsgText ]} {
       error &quot;FAILED: Can't create EAPS Shared-Port $inPortNum $errMsgText&quot;
    }
    
    if {[string match $isExos true]} {
    	configure eaps config-warnings off
   	}
    
    if {[catch {
       configure eaps shared-port $inPortNum link-id $inLinkId
    } errMsgText ]} {
       delete eaps shared-port $inPortNum
       error &quot;FAILED: Can't assign Link-ID $inLinkId on Shared-Port $inPortNum $errMsgText&quot;
    }
    
    if {[catch {
       configure eaps shared-port $inPortNum mode $inMode
    } errMsgText ]} {
       delete eaps shared-port $inPortNum
       error &quot;FAILED: Can't set role $inMode on Shared-Port $inPortNum $errMsgText&quot;
    }
    
     # Check if Shared port timer attribute support in the switch
    set var isSharedLinkTimerSupported [isATLPropertySupported EAPS_SHAREDPORT_TIMER_SUPPORT]
    IF ($isSharedLinkTimerSupported) THEN
	    if {[catch {
	       configure eaps shared-port $inPortNum segment-timers timeout $inSegmentTimeout
	    } errMsgText ]} {
	       delete eaps shared-port $inPortNum
	       error &quot;FAILED: Can't set Segment Timeout $inSegmentTimeout on Shared-Port $inPortNum $errMsgText&quot;
	    }    
 
	    if {[catch {
	       configure eaps shared-port $inPortNum segment-timers health-interval $inSegmentInterval
	    } errMsgText ]} {
	       delete eaps shared-port $inPortNum
	       error &quot;FAILED: Can't set Segment Health-Interval $inSegmentInterval on Shared-Port $inPortNum $errMsgText&quot;
	    }   
	    if {[catch {
	       configure eaps shared-port $inPortNum segment-timers expiry-action $inSegmentExpiryAction
        } errMsgText ]} {
            delete eaps shared-port $inPortNum
	       error &quot;FAILED: Can't set Segment Expiry-Action $inSegmentExpiryAction on Shared-Port $inPortNum $errMsgText&quot;
        }
   ELSE   
	   if {[catch {
		   configure eaps shared-port $inPortNum segment-timeout expiry-action $inSegmentExpiryAction
	   } errMsgText ]} {
	       delete eaps shared-port $inPortNum
		   error &quot;FAILED: Can't set Segment Expiry-Action $inSegmentExpiryAction on Shared-Port $inPortNum $errMsgText&quot;
	   }
   	   
   ENDIF
   
    if {[catch {
       enable eaps
    } errMsgText ]} { 
       delete eaps shared-port $inPortNum
       error &quot;FAILED: Can't enable EAPS Protocol $errMsgText&quot;
    }
}

##################################################################
# TCL Procedure for EAPS Shared-Port Creation
# after validating all parameters
##################################################################
proc handleEapsSharedPortCreate {inPortNum
                                 inLinkId
                                 inMode
                                 inCommonPathInterval
                                 inCommonPathTimeout
                                 inSegmentInterval
                                 inSegmentTimeout
                                 inSegmentExpiryAction} {
    global abort_on_error
	global isExos
	
	if {[string match $isExos true]} {
    	create log entry &quot;Starting EAPS Shared-Port Creation on Switch&quot;
   	}

    validateEapsSharedPortParams $inPortNum \
                                 $inLinkId \
                                 $inMode \
                                 $inCommonPathInterval \
                                 $inCommonPathTimeout \
                                 $inSegmentInterval \
                                 $inSegmentTimeout \
                                 $inSegmentExpiryAction

    createEapsSharedPort $inPortNum \
                         $inLinkId \
                         $inMode \
                         $inCommonPathInterval \
                         $inCommonPathTimeout \
                         $inSegmentInterval \
                         $inSegmentTimeout \
                         $inSegmentExpiryAction
    
    if {[string match $isExos true]} {
    	create log entry &quot;Finished EAPS Shared-Port Creation on Switch&quot;
   	}
}

############################################################################
# CLI Configuration Starting on the Switch
############################################################################
setCliErrorHandling $abortOnCliError

handleEapsSharedPortCreate $eapsSPPortNum \
                           $eapsSPLinkId \
                           $eapsSPMode \
                           $eapsSPCommonPathInterval \
                           $eapsSPCommonPathTimeout \
                           $eapsSPSegmentInterval \
                           $eapsSPSegmentTimeout \
                           $eapsSPSegmentExpiryAction
</content>
<contexts></contexts>
<supprotedGroups>,ALL,</supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<rollbackScript>Rollback_CRE_EAPSSharedPort</rollbackScript>
<postprocessScript>Sync_CRE_EAPSSharedPort</postprocessScript>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
