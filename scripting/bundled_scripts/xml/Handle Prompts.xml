<!-- This file is generated by system. Do not edit this file. -->
<script name="Handle Prompts">
  <comments>Example script to demonstrate how to handle CLI command prompts in the script</comments>
  <content>#######################################################################
# This script demonstrates how to handle command prompts in the script
#######################################################################
create vlan foo
delete vlan foo
SAVE config secondary
# handle prompt: Do you want to save configuration to secondary.cfg and overwrite it?    
# CLI.OUT system variable has response of the previous CLI command (SAVe config secondary)
# use regex to check if it is prompt, supply response if found
 regexp {.*overwrite it?.*} ${CLI.OUT} foundit
  IF ([info exists foundit]) THEN
   CLI yes
  ENDIF  

# handle second prompt: this prompt comes after you respond to first prompt.
 regexp {.*the default database?.*} ${CLI.OUT} foundit2
  IF ([info exists foundit2]) THEN
   CLI yes
 ENDIF </content>
  <creator>admin</creator>
  <contexts></contexts>
  <supprotedGroups></supprotedGroups>
  <roles>,Administrator,</roles>
  <auditLogEnabled>false</auditLogEnabled>
  <saveConfigOnExit>false</saveConfigOnExit>
  <menuScope>NONE</menuScope>
  <scriptTimeout>60</scriptTimeout>
  <defaultCategory>Example</defaultCategory>
</script>