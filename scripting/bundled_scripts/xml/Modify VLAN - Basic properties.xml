<!-- This file is generated by system. Do not edit this file. -->
<script name="Modify VLAN - Basic properties">
  <comments>Factory script to rename change tag or add  remove port to an existing vlan.</comments>
  <content># @METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# Note:  This script is an example and has undergone limited testing.  Please modify and test for your own environment.
# scripting.Script        : VLAN Modification
# Revision      : 1.3
# Last Updated  : December 02, 2014
#
# Purpose:  This script configures / modifies an existing vlan.
#  Specifically, you can:
#   - rename VLAN
#   - tag VLAN
#   - add ports to VLAN
#   - delete ports associated with VLAN
#
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;Simple script to configure already created VLAN.&quot;

# @SectionStart (description = Selected VLAN properties (&quot;Values filled if script is run from vlan view&quot;))
# @VariableFieldLabel ( description = &quot;Vlan name&quot;,
#    type          = VLAN_NAME,
#   scope       = global,
#   required    = yes,
#   readonly     = no
#)
set var vlanname ExtremeVlan1

# @SectionEnd

# @SectionStart    ( description = &quot;Basic properties&quot;)
# @VariableFieldLabel ( description = &quot;Abort on error?&quot;,
#    type          = String,
#   scope       = global,
#   required    = yes,
#   validValues=[yes,no])
set var abort_when_error yes

# @VariableFieldLabel (description   = &quot;Change VLAN tag? New VLAN tag&quot;,
#      type          = String,
#     scope         = global
#    )
set var vlannametag &quot;&quot;

# @VariableFieldLabel (description   = &quot;Change VLAN name? New VLAN name&quot;,
#      type          = String,
#     scope         = global
#    )
set var newvlanname &quot;&quot;

# @VariableFieldLabel (description   = &quot;QoS profile (eg. leave blank for default QoS)&quot;
#      type          = String,
#     scope         = global
#    )
set var vlannameqos &quot;&quot;

# @VariableFieldLabel (description   = &quot;Protocol filter&quot;
#      type          = String,
#     scope         = global
#    )
set var protocolfilter &quot;&quot;

# @SectionEnd

# @SectionStart    (description = &quot;Configure ports&quot; )
# @VariableFieldLabel ( description = &quot;Allow adding EAPS ring ports to VLAN? (ensure vlan is protected by EAPS)&quot;,
#    type          = String,
#   scope       = global,
#   required    = yes,
#   validValues=[yes,no])
set var allowRingPorts yes

# @VariableFieldLabel (description = &quot;Add these tagged ports&quot;
#      type        = String
#     scope       = device
#    )
set var taggedPorts  &quot;&quot;

# @VariableFieldLabel (description   = &quot;Add these untagged ports&quot;,
#      type        = String
#     scope       = device
#    )
set var untaggedPorts  &quot;&quot;

# @VariableFieldLabel (description   = &quot;Delete these port or ports from VLAN&quot;,
#      type          = String,
#     scope         = device
#    )
set var removePortList &quot;&quot;


# @SectionEnd
# @MetaDataEnd
################################################################################
################################################################################
#                    CONFIGURATION DETAIL
################################################################################
################################################################################

################################################################################
# CLI MODE
################################################################################
IF ($abort_when_error == no) THEN
 configure cli mode scripting ignore-error
ELSE
  configure cli mode scripting abort-on-error
ENDIF

IF (![string equal $vendor &quot;Extreme&quot;]) THEN
   error &quot;This script is only supported for Extreme switches.&quot;
ENDIF


################################################################################
# VLAN modification CLI
################################################################################
IF ([expr [string length $vlannametag] &gt; 0]) THEN
  configure vlan $vlanname tag $vlannametag
ENDIF

IF ([expr [string length $vlannameqos] &gt; 0]) THEN
    config vlan $vlanname qosprofile $vlannameqos
endif

IF ([expr [string length $protocolfilter] &gt; 0]) THEN
   config vlan $vlanname protocol $protocolfilter
ENDIF

IF ([expr [string length $removePortList] &gt; 0]) THEN
  configure vlan $vlanname delete port $removePortList
ENDIF

IF ([expr [string length $taggedPorts] &gt; 0]) THEN
  configure vlan $vlanname add port $taggedPorts tagged
  # suppress loop warning
  regexp {.*Adding EAPS ring ports to a VLAN could cause a loop.*} ${CLI.OUT} foundit
  IF ([info exists foundit]) THEN
   $allowRingPorts
  ENDIF
ENDIF

IF ([expr [string length $untaggedPorts] &gt; 0]) THEN
  configure vlan $vlanname add port $untaggedPorts untagged
    # suppress loop warning
  regexp {.*Adding EAPS ring ports to a VLAN could cause a loop.*} ${CLI.OUT} foundit
  IF ([info exists foundit]) THEN
   $allowRingPorts
  ENDIF
ENDIF

IF ([expr [string length $newvlanname] &gt; 0]) THEN
  configure vlan $vlanname name $newvlanname
  PerformSync -scope VLAN
ELSE
  PerformSync -scope VLAN -vlan $vlanname
ENDIF


</content>
  <creator>system</creator>
  <contexts>,VLANS,Device,Links,</contexts>
  <supprotedGroups></supprotedGroups>
  <roles>,Administrator,</roles>
  <auditLogEnabled>true</auditLogEnabled>
  <saveConfigOnExit>false</saveConfigOnExit>
  <menuScope>TOOLS</menuScope>
  <scriptTimeout>60</scriptTimeout>
  <defaultCategory>VLAN</defaultCategory>
</script>