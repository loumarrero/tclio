<!-- This file is generated by system. Do not edit this file. -->
<script name="Create vlan protocol filter">
  <comments>Factory script to create new protocol filter and configure protocol types</comments>
  <content># @METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# Note:  This script is an example and has undergone limited testing.  Please modify and test for your own environment.
# scripting.Script        : Create User defined protocol filter with optional protocol type
# Revision      : 1.1
# Last Updated  : May 30, 2009
#
# Purpose:  To create user defined protocol filter
# Note: If you wish to apply more that one Protocol type to new protocol, create
# protocol with one filter and use &quot;Modify Protocol Filter&quot; to add additional types
#
#####################################################################
#@DetailDescriptionEnd

# @VariableFieldLabel (description     = &quot;Stop on error?&quot;
#     type            = String,
#     scope           = global,
#     required      = yes,
#     validValues=[yes,no])
set var abort_when_error yes

# @VariableFieldLabel (description     = &quot;Protocol filter name&quot;
#      type            = String,
#     scope           = global,
#      required      = yes
#    )
set var protocolname &quot;&quot;

# @VariableFieldLabel (description     = &quot;Protocol type&quot;
#      type            = String, validValues=[etype,llc,snap],
#     scope           = global
#    )
set var protocolType etype

# @VariableFieldLabel (description     = &quot;Protocol value (hex value 0-0xffff). Comma seperated if multiple hex values.&quot;,
#      type            = String,
#     scope           = global
#    )
set var protocolValue &quot;&quot;

# @VariableFieldLabel (description     = &quot;Second Protocol type&quot;
#      type            = String, validValues=[etype,llc,snap],
#     scope           = global
#    )
set var protocolType2 etype

# @VariableFieldLabel (description     = &quot;Protocol value (hex value 0-0xffff). Comma seperated if multiple hex values. Run &quot;Modify Protocol Filter&quot; script if you wish to add additional protocol types&quot;,
#      type            = String,
#     scope           = global
#    )
set var protocolValue2 &quot;&quot;


# @MetaDataEnd
IF ($abort_when_error == no) THEN
 configure cli mode scripting ignore-error
ELSE
  configure cli mode scripting abort-on-error
ENDIF


################################################################################
# Protocol creation CLI
################################################################################
 IF ([expr [string length $protocolname] &gt; 0]) THEN
    create protocol $protocolname
 ENDIF

# configure first protocol type
set hexValues [split ${protocolValue} ,]
foreach hexValue $hexValues {
 if ([expr [string length $hexValue] &gt; 0]) then
  set hexValue [string trim $hexValue]
  configure protocol $protocolname add $protocolType $hexValue
 endif
}

# configure second protocol type
set hexValues [split ${protocolValue2} ,]
foreach hexValue $hexValues {
 if ([expr [string length $hexValue] &gt; 0]) then
  set hexValue [string trim $hexValue]
  configure protocol $protocolname add $protocolType2 $hexValue
 endif
}</content>
  <creator>system</creator>
  <contexts>,VLANS,Device,Links,</contexts>
  <supprotedGroups></supprotedGroups>
  <roles>,Administrator,</roles>
  <auditLogEnabled>true</auditLogEnabled>
  <saveConfigOnExit>false</saveConfigOnExit>
  <menuScope>TOOLS</menuScope>
  <scriptTimeout>60</scriptTimeout>
   <defaultCategory>VLAN</defaultCategory>
</script>