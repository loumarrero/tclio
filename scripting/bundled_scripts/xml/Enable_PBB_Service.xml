<!-- This file is generated by system. Do not edit this file. -->
<script name="Enable_PBB_Service">
<comments>This script enables a PBB Service</comments>
<content>#@MetaDataStart
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# scripting.Script        : Enables a PBB Service for Customer
#############################################################################
# Revision      : 1.0
# Last Updated  : 26-DEC-2009
#############################################################################
# Author Name   : NMS Team
#############################################################################
# Purpose:  This script enables a PBB Service
#############################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;scripting.Script to enable a PBB Service&quot;
# @SectionStart (description = &quot;PBB Service Enabling Parameters&quot;)

# @VariableFieldLabel (description = &quot;Abort on error?&quot;,
#   type        = String,
#   scope       = global,
#   required    = yes,
#   validValues = [yes,no])
set var abortOnCliError yes

# @VariableFieldLabel (description = &quot;S/C-VLAN Name&quot;,
#   type        = VLAN_NAME,
#   scope       = global,
#   required    = yes,
#   readonly    = no)
set var ethServSorCVLanName &quot;&quot;

# @SectionEnd
# @MetaDataEnd
################################################################################

############################################################################
# TCL Procedure for CLI scripting.Script Execution Mode setting
############################################################################
proc setCliErrorHandling {inAbortStatus} {

     global abort_on_error

     if {![string compare $inAbortStatus "yes"]} {
        configure cli mode scripting abort-on-error
     } else {
        configure cli mode scripting ignore-error
     }
}

############################################################################
# TCL Procedure To Validate B-VLAN based Service enabling Parameters
############################################################################
proc validateBVLanServiceParams {inSorCVLanName} {

    global abort_on_error
    global vendor

    IF (![string equal $vendor &quot;Extreme&quot;]) THEN
       error &quot;FAILED: scripting.Script not supported for non-Extreme switches.&quot;
    ENDIF

    IF (![expr [string length $inSorCVLanName] &gt; 0]) THEN
       error &quot;FAILED: S/C-VLAN Name is empty.&quot;
    ENDIF
}

###########################################################################
# Procedure to enable the S/C-VLAN on the switch
###########################################################################
proc enableBVLanService {inSorCVLanName} {

    global abort_on_error

    if {[catch {
       enable vlan $inSorCVLanName
    } result]} {
       error &quot;FAILED: Could not enable S/C-VLAN $inSorCVLanName, $result&quot;
    }
}

############################################################################
# TCL Procedure for PBB Service enabling
############################################################################
proc enablePBBService {inSorCVLanName} {

    global abort_on_error
	global isExos
	
	if {[string match $isExos true]} {
    	create log entry &quot;Starting PBB Service enabling on Switch&quot;
	}
	
    validateBVLanServiceParams $inSorCVLanName

    enableBVLanService $inSorCVLanName

	if {[string match $isExos true]} {
    	create log entry &quot;Finished PBB Service enabling on Switch&quot;
   	}
}

############################################################################
# CLI Configuration Scripts Execution STARTING
############################################################################
setCliErrorHandling $abortOnCliError

enablePBBService $ethServSorCVLanName

PerformSync -device $deviceIP -scope VLAN -vlan $ethServSorCVLanName</content>
<contexts></contexts>
<supprotedGroups></supprotedGroups>
<roles>,Administrator,</roles>
<auditLogEnabled>false</auditLogEnabled>
<saveConfigOnExit>true</saveConfigOnExit>
<menuScope>TOOLS</menuScope>
<scriptTimeout>120</scriptTimeout>
<defaultCategory>Provisioning</defaultCategory>
<creator>system</creator>
<scriptOwner>system</scriptOwner>

</script>
