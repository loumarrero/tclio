<!-- This file is generated by system. Do not edit this file. -->
<script name="Modify VLAN - assign to EAPS domain">
  <comments>Factory script to assign a protected or control VLAN to an EAPS domain</comments>
  <content># @METADATASTART
#@DetailDescriptionStart
#############################################################################
# Extreme Networks(R) CLI Scripting Library
# Note:  This script is an example and has undergone limited testing.  Please modify and test for your own environment.
# scripting.Script        : VLAN Modification
# Revision      : 1.2
# Last Updated  : November 21, 2014
#
# Purpose:  This script can add/remove a protected/control vlan to/from an EAPS domain.
#
#####################################################################
#@DetailDescriptionEnd

# @ScriptDescription &quot;Simple script to configure already created VLAN.&quot;
# @SectionStart (description = Selected VLAN properties (&quot;Only shown if script is run from vlan view&quot;))
# @VariableFieldLabel ( description = &quot;Vlan name&quot;,
#    type          = VLAN_NAME,
#   scope       = global,
#   required    = yes,
#   readonly     = no
#)
set var vlanname ExtremeVlan1


# @SectionEnd

# @SectionStart    ( description = &quot;Protect VLAN by EAPS&quot;)
# @VariableFieldLabel ( description = &quot;Abort on error?&quot;,
#    type          = String,
#   scope       = global,
#   required    = yes,
#   validValues=[yes,no])
set var abort_when_error yes

################################################################################
# VLAN Definition
################################################################################

# @VariableFieldLabel (description   = &quot;EAPS domain name&quot;,
#       type          = String
#     scope         = global, required = yes
#    )
set var eapsdomainname &quot;&quot;

# @VariableFieldLabel (description   = EAPS ring ports (primary\,secondary eg: 3\,4 or 1:3\,1:4) - will be added to vlan as tagged ports,
#       type          = String
#     scope         = global, required = yes
#    )
set var eapsRingPorts &quot;&quot;

# @VariableFieldLabel (description   = &quot;Add / Remove this VLAN?&quot;,
#       type          = String, validValues = [add,remove],
#     scope         = global, required = yes
#    )
set var addremoveprompt add

# @VariableFieldLabel (description   = &quot;VLAN type?&quot;,
#       type          = String, validValues = [control,protected],
#     scope         = global, required = yes
#    )
set var vlantype protected

# @SectionEnd
# @MetaDataEnd
################################################################################
################################################################################
#                    CONFIGURATION DETAIL
################################################################################
################################################################################

################################################################################
# CLI MODE
################################################################################
IF ($abort_when_error == no) THEN
 configure cli mode scripting ignore-error
ELSE
  configure cli mode scripting abort-on-error
ENDIF

IF (![string equal $vendor &quot;Extreme&quot;]) THEN
   error &quot;This script is only supported for Extreme switches.&quot;
ENDIF

IF ([expr [string length $eapsdomainname] &gt; 0]) THEN
  IF ([string equal $addremoveprompt add]) THEN
      IF ([expr [string length $eapsRingPorts] &gt; 0]) THEN
          config vlan  $vlanname add ports $eapsRingPorts tagged
          regexp {.*Adding EAPS ring ports to a VLAN could cause a loop.*} ${CLI.OUT} foundit
          IF ([info exists foundit]) THEN
               yes
          ENDIF

      ENDIF
      IF ([string equal $isExos &quot;false&quot;] &amp;&amp; [string equal $vlantype &quot;protected&quot;]) THEN
          config eaps $eapsdomainname add protect vlan $vlanname
      ELSE
      config eaps $eapsdomainname add $vlantype vlan $vlanname
      ENDIF
  ELSE       
    IF ([string equal $isExos &quot;false&quot;] &amp;&amp; [string equal $vlantype &quot;protected&quot;]) THEN
          config eaps $eapsdomainname delete protect vlan $vlanname
  ELSE
    config eaps $eapsdomainname delete $vlantype vlan $vlanname
    regexp {.*Are you sure you want to remove VLAN.*before deleting EAPS ring-ports.*} ${CLI.OUT} foundit
    IF ([info exists foundit]) THEN
         yes
    ENDIF
  ENDIF
  ENDIF
  PerformSync -scope VLAN -vlan $vlanname
 ELSE
   ECHO &quot;INFO: Required information missing. Please input eaps domain information and try again.&quot; 
ENDIF



</content>
  <creator>system</creator>
  <contexts>,VLANS,Device,Links,</contexts>
  <supprotedGroups></supprotedGroups>
  <roles>,Administrator,</roles>
  <auditLogEnabled>false</auditLogEnabled>
  <saveConfigOnExit>false</saveConfigOnExit>
  <menuScope>TOOLS</menuScope>
  <scriptTimeout>60</scriptTimeout>
  <defaultCategory>VLAN</defaultCategory>
</script>